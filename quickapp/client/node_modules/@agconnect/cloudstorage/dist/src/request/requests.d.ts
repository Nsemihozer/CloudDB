import { RequestInfo } from './requestinfo';
import { ListResult } from '../list';
import { Location } from '../implementation/location';
import { Metadata } from '../metadata';
import { StorageManagement } from '../storagemanagement';
import { AgconnectStorageError } from '../implementation/error';
import { CSBlob } from '../upload/file';
export declare function listHandler(storageManagement: StorageManagement, location: Location, area: string): (status: number, res: any) => ListResult;
export declare function list(storageManagement: StorageManagement, location: Location, area: string, delimiter?: string, marker?: string | null, maxKeys?: number | null): RequestInfo<ListResult>;
export declare function errorHandler(): (status: number, error: any) => AgconnectStorageError;
export declare function quickAppUpload(storageManagement: StorageManagement, location: Location, uri: string, area: string, metadata?: Metadata | null): RequestInfo<Metadata>;
export declare function multipartUpload(storageManagement: StorageManagement, location: Location, blob: CSBlob, area: string, metadata?: Metadata | null): RequestInfo<Metadata>;
export declare class ResumableUploadStatus {
    current: number;
    total: number;
    finalized: boolean;
    metadata: Metadata | null;
    constructor(current: number, total: number, finalized?: boolean, metadata?: Metadata | null);
}
export declare const resumableUploadChunkSize: number;
export declare function getResumableUploadStatus(storageManagement: StorageManagement, location: Location, url: string, blob: CSBlob, area: string): RequestInfo<ResumableUploadStatus>;
export declare function deleteObject(storageManagement: StorageManagement, location: Location, area: string): RequestInfo<void>;
export declare function downloadUrlHandler(storageManagement: StorageManagement, location: Location, area: string): (status: number, res: any) => string | null;
export declare function getDownloadUrl(storageManagement: StorageManagement, location: Location, area: string): RequestInfo<string | null>;
export declare function metadataHandler(): (status: number, res: any) => Metadata;
export declare function getFileMetadata(storageManagement: StorageManagement, location: Location, area: string): RequestInfo<Metadata>;
export declare function determineContentType_(metadata: Metadata | null, blob: CSBlob | null): string;
export declare function metadataForUpload_(location: Location, blob: CSBlob, metadata?: Metadata | null): Metadata;
export declare function checkResumeHeader_(res: any, allowed?: string[]): string;
export declare function updateFileMetadata(storageManagement: StorageManagement, location: Location, metadata: Metadata, area: string): RequestInfo<Metadata>;
export declare function continueResumableUpload(location: Location, storageManagement: StorageManagement, url: string, blob: CSBlob, chunkSize: number, area: string, status?: ResumableUploadStatus | null, metadata?: Metadata | null, progressCallback?: (progressEvent: any) => void): RequestInfo<ResumableUploadStatus>;
