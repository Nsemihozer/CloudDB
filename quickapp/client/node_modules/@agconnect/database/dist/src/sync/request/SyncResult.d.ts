import { EncryptInfo } from '../utils/EncryptInfo';
import Long from 'long';
import { ErrorCode } from '../../utils/ErrorCode';
import { MessageSubType, MessageType, ServerPushOperationType } from '../utils/MessageType';
export declare enum SchemaNegotiateResult {
    PASS = 0,
    FAIL = 1,
    RETRY = 2
}
export declare class PermissionRecord {
    tableName: string;
    roleType: string;
    readPermission: boolean;
    upsertPermission: boolean;
    deletePermission: boolean;
}
export declare class NegoResponse {
    negoResult: SchemaNegotiateResult;
    permissions: PermissionRecord[];
}
export declare class ObjectSyncResponse {
    data: {
        tableName: string;
        data: any[];
    }[];
}
export declare class CloudObjectSyncResponse {
    queryId: string;
    successNumber: number;
}
export declare enum CloudQueryResult {
    QUERY_SUCCESS = 0,
    QUERY_FAILED = 1,
    QUERY_FAILED_FOR_BIG_RECORD = 2,
    QUERY_FAILED_FOR_ENCRYPT_FIELD = 3,
    QUERY_FAILED_FOR_LARGE_RESULT_SET = 4,
    QUERY_FAILED_FOR_NO_INDEX = 5
}
export declare enum QueryType {
    CONVENTIONAL_QUERY = 0,
    AVG_QUERY = 1
}
export declare class AggreResult {
    isNull?: (boolean | null);
    longRes?: (Long | null);
    doubleRes?: (number | null);
}
export declare class QueryResponse {
    tableName: string;
    queryResult: boolean;
    queryType: QueryType;
    totalLength: number;
    aggreResult: AggreResult;
    responseObject: any[];
}
export declare class TransactionResponse {
    transactionId: string;
    transactionResult: ErrorCode;
}
export declare class QuerySubscribeResponse {
    subscribeResults: {
        cloudSubRecordId: string;
        subscribeId: string;
        subKey: number;
        subResponseCode?: (ErrorCode | null);
    }[];
}
export declare class QueryUnSubscribeResponse {
    unSubScribeResults: {
        unSubRecId: string;
        unSubResCode: number;
    }[];
}
export declare class QuerySubscribePushResponse {
    subRecId: string;
    responseObject: any[];
    pushSeq: number;
    subKey: number;
    storeName: string;
    subscribeId: string;
    tableName?: string;
    operationType?: ServerPushOperationType;
}
export declare class EncryptionResponse {
    encryptionMessageType: MessageSubType;
    encryptionInfoList: EncryptInfo[];
}
export declare class SyncResult {
    responseCode: number;
    type: MessageType;
    subType: MessageSubType;
    taskId: Long;
    storeName: string;
    response: NegoResponse | ObjectSyncResponse | CloudObjectSyncResponse | QueryResponse | TransactionResponse | QuerySubscribeResponse | QueryUnSubscribeResponse | QuerySubscribePushResponse | EncryptionResponse | undefined;
}
